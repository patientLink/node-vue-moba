@import "./variables";
// reset

* {
  box-sizing: border-box;
  outline: none;
}

html {
  font-size: 13px;

}

body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.2rem;
  background: #f1f1f1;
  -webkit-font-smoothing: antialiased;
}

a {
  color: #999;
  text-decoration: none;
}

p {
  margin: 0;
}

ul {
  margin: 0;
  padding: 0;
}

li {
  padding: 0;
  list-style: none;
}
@each $colorKey,
$color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }

  .bg-#{$colorKey} {
    background-color: $color;
    ;
  }
}

// text
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var !important;
  }
}

@each $sizeKey,
$size in $font-sizes {
  .fs-#{$sizeKey} {
    font-size: $size * $base-font-size;
  }
}

.text-ellipsis {
  // display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// width, height
.w-100 {
  width: 100%;
}
.h-100 {
  height: 100%;
}

.f-bold {
  font-weight: bold;
}

// flex
.d-flex {
  display: flex;
}

.d-inline-flex {
  display: inline-flex;
}

.flex-column {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-nowrap {
  flex-wrap: nowrap;
}

@each $key,
$value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
}

@each $key,
$value in $flex-ai {
  .ai-#{$key} {
    align-items: $value;
  }
}

.flex-1 {
  flex: 1;
}

.flex-grow-1 {
  flex-grow: 1;
}

@each $typeKey, $type in $spacing-types {
  // .m-1
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}-#{$sizeKey} {
        #{$type}: $size * $spacing-base-size;
      }
    }

  // .mx-1, .my-1
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size * $spacing-base-size;
      #{$type}-right: $size * $spacing-base-size;
    }
    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size * $spacing-base-size;
      #{$type}-bottom: $size * $spacing-base-size;
    }
  }

  // .mt-1
  @each $directionKey, $direction in $spacing-directions {
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $spacing-base-size;
      }
    }
  }
}

@mixin sprite {
  background: url(../images/background-sprites.png);
  background-size: 28.8462 * $base-font-size;
  background-repeat: no-repeat;
}

.bg-sprite {
  @include sprite
}


.nav{
  height: 3.2308rem;
  .nav-item {
    color: map-get($map: $colors, $key: 'dark-1');
    border-bottom: 3px solid transparent;
    &.active {
      color: map-get($map: $colors, $key: 'primary');
      border-bottom: 3px solid map-get($map: $colors, $key: "primary");
    }
  }
  &.nav-reverse {
    .nav-item {
      color: map-get($map: $colors, $key: 'white');
      border-bottom: 3px solid transparent;
      &.active {
        border-bottom: 3px solid map-get($map: $colors, $key: "white");
      }
    }
  }
}

.d-btn {
  border: none;
  border-radius: 0.3077rem;
  background: map-get($map: $colors, $key: 'white');

  &.btn-lg {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 49%;
    background: map-get($map: $colors, $key: 'white-btn');
    border: 1px solid map-get($map: $colors, $key: 'dark-border');
    padding: 0.6rem 1rem;
    font-size: 1rem;
    i {
      color: map-get($map: $colors, $key: 'primary');
      font-size: 1.5rem;
      margin-right: 0.5rem;
    }
  }
}

.bottom-border {
  border-bottom: 1px solid map-get($map: $colors, $key: 'grey-2');
}

